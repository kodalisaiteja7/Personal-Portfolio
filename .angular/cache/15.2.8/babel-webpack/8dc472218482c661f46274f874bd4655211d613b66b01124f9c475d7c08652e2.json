{"ast":null,"code":"import { finalize } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/loader.service\";\nexport class LoadingInterceptor {\n  constructor(loaderService) {\n    this.loaderService = loaderService;\n  }\n  intercept(request, next) {\n    this.loaderService.show();\n    return next.handle(request).pipe(finalize(() => {\n      this.loaderService.hide();\n    }));\n  }\n}\nLoadingInterceptor.ɵfac = function LoadingInterceptor_Factory(t) {\n  return new (t || LoadingInterceptor)(i0.ɵɵinject(i1.LoaderService));\n};\nLoadingInterceptor.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: LoadingInterceptor,\n  factory: LoadingInterceptor.ɵfac\n});","map":{"version":3,"mappings":"AAOA,SAAqBA,QAAQ,QAAQ,MAAM;;;AAI3C,OAAM,MAAOC,kBAAkB;EAE7BC,YAAoBC,aAA4B;IAA5B,kBAAa,GAAbA,aAAa;EAAkB;EAEnDC,SAAS,CAACC,OAA6B,EAAEC,IAAiB;IACxD,IAAI,CAACH,aAAa,CAACI,IAAI,EAAE;IACzB,OAAOD,IAAI,CAACE,MAAM,CAACH,OAAO,CAAC,CAACI,IAAI,CAC9BT,QAAQ,CAAC,MAAK;MACZ,IAAI,CAACG,aAAa,CAACO,IAAI,EAAE;IAC3B,CAAC,CAAC,CACH;EACH;;AAXWT,kBAAkB;mBAAlBA,kBAAkB;AAAA;AAAlBA,kBAAkB;SAAlBA,kBAAkB;EAAAU,SAAlBV,kBAAkB;AAAA","names":["finalize","LoadingInterceptor","constructor","loaderService","intercept","request","next","show","handle","pipe","hide","factory"],"sourceRoot":"","sources":["C:\\Users\\tejA\\Desktop\\AngPortfolio\\portfolio\\src\\app\\interceptors\\loading.interceptor.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor\r\n} from '@angular/common/http';\r\nimport { Observable, finalize } from 'rxjs';\r\nimport { LoaderService } from 'src/app/services/loader.service';\r\n\r\n@Injectable()\r\nexport class LoadingInterceptor implements HttpInterceptor {\r\n\r\n  constructor(private loaderService: LoaderService) {}\r\n\r\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\r\n    this.loaderService.show();\r\n    return next.handle(request).pipe(\r\n      finalize(() => {\r\n        this.loaderService.hide()\r\n      })\r\n    )\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}